name: Test

on:
  pull_request:
  workflow_dispatch:

jobs:
  detect-changes:
    uses: ./.github/workflows/detect-changes-matrix.yml
  test:
    name: ${{ matrix.folder == '.' && 'ðŸŒŠ Ocean Core' || format('ðŸš¢ {0}', matrix.folder) }}
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'poetry'
      - name: Install dependencies
        working-directory: ${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || '.' }}
        run: |
          make install
      - name: Test
        working-directory: ${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || '.' }}
        env:
          PYTEST_ADDOPTS: --junitxml=junit/test-results-${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || 'ocean/core' }}.xml
        run: |
          make test
      - name: Install current core for all integrations
        working-directory: ${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || '.' }}
        if: ${{ matrix.folder == '.' }}
        run: |
          echo "Installing local core for all integrations"
          SCRIPT_TO_RUN='make install/local-core' make execute/all
      - name: Test all integrations with current core
        working-directory: ${{ matrix.folder != '.' && format('integrations/{0}', matrix.folder) || '.' }}
        if: ${{ matrix.folder == '.' }}
        run: |
          echo "Testing all integrations with local core"
          SCRIPT_TO_RUN="PYTEST_ADDOPTS=--junitxml=${PWD}/junit/test-results-core-change/\`pwd | xargs basename\`.xml make test" make execute/all
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: ${{ always() }}
        with:
          report_paths: '**/junit/test-results-**/*.xml'
          include_passed: true
          require_tests: true
