resources:
  - kind: Microsoft.Resources/resourceGroups
    selector:
      query: "true"
      # azure resource api version to query
      api_version: '2022-09-01'
    port:
      entity:
        mappings:
          # lowercase only the resourceGroups namespace so other azure resources will be able to relate to it
          identifier: '.id | split("/") | .[3] |= ascii_downcase |.[4] |= ascii_downcase | join("/")'
          title: .name
          blueprint: '"resource_group"'
          properties:
            location: .location
            provisioning_state: .properties.provisioning_state
            tags: .tags
  - kind: Microsoft.App/containerApps
    selector:
      query: "true"
      # azure resource api version to query
      api_version: '2022-03-01'
    port:
      entity:
        mappings:
          # lowercase only the resourceGroups namespace and name to align how azure API returns the resource group reference
          identifier: '.id | split("/") | .[3] |= ascii_downcase |.[4] |= ascii_downcase | join("/")'
          title: .name
          blueprint: '"container_app"'
          properties:
            location: .location
            provisioning_state: .properties.provisioningState
            outbound_ip_addresses: .properties.outboundIpAddresses
            external_ingress: .properties.configuration.ingress.external
            host_name: .properties.configuration.ingress.fqdn
            min_replicas: .properties.template.scale.minReplicas
            max_replicas: .properties.template.scale.maxReplicas
          relations:
            resource_group: '.id | split("/") | .[3] |= ascii_downcase | .[:5] |join("/")'
  - kind: Microsoft.ContainerService/managedClusters
    selector:
      query: "true"
      # azure resource api version to query
      api_version: '2023-05-01'
    port:
      entity:
        mappings:
          # lowercase only the resourceGroups namespace and name to align how azure API returns the resource group reference
          identifier: '.id | split("/") | .[3] |= ascii_downcase |.[4] |= ascii_downcase | join("/")'
          title: .name
          blueprint: '"aks"'
          properties:
            location: .location
            provisioning_state: .properties.provisioningState
            power_state: .properties.powerState.code
            kubernetes_version: .properties.kubernetesVersion
            current_kubernetes_version: .properties.currentKubernetesVersion
            dns_prefix: .properties.dnsPrefix
            fqdn: .properties.fqdn
            node_resource_group: .properties.nodeResourceGroup
            enable_rbac: .properties.enableRBAC
            support_plan: .properties.supportPlan
            network_plugin: .properties.networkProfile.networkPlugin
            pod_cidr: .properties.networkProfile.podCidr
            service_cidr: .properties.networkProfile.serviceCidr
            dns_service_ip: .properties.networkProfile.dnsServiceIP
            outbound_type: .properties.networkProfile.outboundType
            load_balancer_sku: .properties.networkProfile.loadBalancerSku
            max_agent_pools: .properties.maxAgentPools
            sku_tier: .properties.sku.tier
          relations:
            # resolve resource group id from aks id
            # AKS id contains the resourcegroups namespace instead of resourceGroups therefore we need to lowercase
            # all other resourceGroups namespaces of other azure resources so we will be able to relate them to resource group blueprint
            resource_group: '.id | split("/") | .[3] |= ascii_downcase | .[:5] |join("/")'
  - kind: Microsoft.Network/loadBalancers
    selector:
        query: "true"
        # azure resource api version to query
        api_version: '2023-02-01'
    port:
      entity:
        mappings:
          # lowercase only the resourceGroups namespace and name to align how azure API returns the resource group reference
          identifier: '.id | split("/") | .[3] |= ascii_downcase |.[4] |= ascii_downcase | join("/")'
          title: .name
          blueprint: '"load_balancer"'
          properties:
            location: .location
            provisioning_state: .properties.provisioningState
            tags: .tags
            frontend_ip_resource_ids: .properties.frontendIPConfigurations[].id
            backend_address_pool_resource_ids: .properties.backendAddressPools[].id
            load_balancing_rules_resource_ids: .properties.loadBalancingRules[].id
            probes_resource_ids: .properties.probes[].id
            inbound_nat_rules_resource_ids: .properties.inboundNatRules[].id
            inbound_nat_pools_resource_ids: .properties.inboundNatPools[].id
          relations:
            # resolve resource group id from load balancer id
            resource_group: '.id | split("/") | .[3] |= ascii_downcase | .[:5] |join("/")'
  - kind: Microsoft.Storage/storageAccounts
    selector:
        query: "true"
        # azure resource api version to query
        api_version: '2023-01-01'
    port:
      entity:
        mappings:
          # lowercase only the resourceGroups namespace and name to align how azure API returns the resource group reference
          identifier: '.id | split("/") | .[3] |= ascii_downcase |.[4] |= ascii_downcase | join("/")'
          title: .name
          blueprint: '"storage_account"'
          properties:
            location: .location
            provisioning_state: .properties.provisioningState
            creation_time: .properties.creationTime
            is_hns_enabled: .properties.isHnsEnabled
            file_encryption_enabled: .properties.encryption.services.file.enabled
            blob_encryption_enabled: .properties.encryption.services.blob.enabled
            primary_location: .properties.primaryLocation
            secondary_location: .properties.secondaryLocation
            status_of_primary: .properties.statusOfPrimary
            status_of_secondary: .properties.statusOfSecondary
            allow_blob_public_access: .properties.allowBlobPublicAccess
            tags: .tags
          relations:
            # resolve resource group id from storage account id
            resource_group: '.id | split("/") | .[3] |= ascii_downcase | .[:5] |join("/")'
  - kind: Microsoft.Compute/virtualMachines
    selector:
        query: "true"
        # azure resource api version to query
        api_version: '2023-03-01'
    port:
      entity:
        mappings:
          # lowercase only the resourceGroups namespace and name to align how azure API returns the resource group reference
          identifier: '.id | split("/") | .[3] |= ascii_downcase |.[4] |= ascii_downcase | join("/")'
          title: .name
          blueprint: '"virtual_machine"'
          properties:
            location: .location
            provisioning_state: .properties.provisioningState
            vm_size: .properties.hardwareProfile.vmSize
            os_disk_name: .properties.storageProfile.osDisk.name
            os_type: .properties.storageProfile.osDisk.osType
            os_disk_caching: .properties.storageProfile.osDisk.caching
            os_disk_size_gb: .properties.storageProfile.osDisk.diskSizeGB
            os_disk_create_option: .properties.storageProfile.osDisk.createOption
            network_interface_ids: .properties.networkProfile.networkInterfaces[].id
            license_type: .properties.licenseType
            vm_os_profile: .properties.osProfile
            vm_hardware_profile: .properties.hardwareProfile
            vm_storage_profile: .properties.storageProfile
            zones: .properties.zones
            tags: .tags
          relations:
            # resolve resource group id from virtual machine id
            resource_group: '.id | split("/") | .[3] |= ascii_downcase | .[:5] |join("/")'