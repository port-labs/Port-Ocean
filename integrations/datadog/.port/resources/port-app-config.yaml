deleteDependentEntities: true
createMissingRelatedEntities: true
resources:
  - kind: host
    selector:
      query: "true"
      enrichWithDashboards: []
    port:
      entity:
        mappings:
          blueprint: '"datadogHost"'
          identifier: .id | tostring
          title: .aws_name // .host_name
          properties:
            up: .up
            host_name: .host_name
            platform: .meta.platform
            is_muted: .is_muted
            machine: .meta.machine
            description: .description
            sources: .sources
            cpu_cores: .meta.cpuCores
            agent_version: .meta.agent_version
            metrics_availability: .__metrics_availability
            tags: .tags_by_source
          relations:
            availableMetrics: '[.__available_metrics[].widget_id | tostring]'
  - kind: monitor
    selector:
      query: "true"
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .name
          blueprint: '"datadogMonitor"'
          properties:
            tags: .tags
            monitorType: .type
            overallState: .overall_state
            thresholds: .thresholds
            priority: .priority
            createdBy: .creator.email
            createdAt: .created
            updatedAt: .modified
  - kind: service
    selector:
      query: "true"
      enrichWithDashboards: []
    port:
      entity:
        mappings:
          identifier: .attributes.schema."dd-service"
          title: .attributes.schema."dd-service"
          blueprint: '"datadogService"'
          properties:
            application: .attributes.schema.application
            languages: .attributes.schema.languages
            description: .attributes.schema.description
            tags: .attributes.schema.tags
            type: .attributes.schema.type
            links: .attributes.schema.links | map(.url)
            metrics_availability: .__metrics_availability
            owners: >-
              [.attributes.schema.contacts[] | select(.type == "email") |
              .contact]
          relations:
            availableMetrics: '[.__available_metrics[].widget_id | tostring]'
  - kind: slo
    selector:
      query: "true"
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .name
          blueprint: '"datadogSlo"'
          properties:
            tags: .tags
            sloType: .type
            description: .description
            warningThreshold: .warning_threshold
            targetThreshold: .target_threshold
            createdBy: .creator.email
            createdAt: .created_at | todate
            updatedAt: .modified_at | todate
          relations:
            monitors: .monitor_ids | map(tostring)
            services: >-
              .monitor_tags + .tags | map(select(startswith("service:"))) |
              unique | map(split(":")[1])
  - kind: sloHistory
    selector:
      query: "true"
      timeframe: 30
      period_of_time_in_years: 12
    port:
      entity:
        mappings:
          identifier: >-
            (.slo.id | tostring) + "-" + (.from_ts | tostring) + "-" + (.to_ts |
            tostring)
          title: .slo.name
          blueprint: '"datadogSloHistory"'
          properties:
            monitory_type: .type
            sampling_start_date: .from_ts | todate
            sampling_end_date: .to_ts | todate
            sliValue: .overall.sli_value
            timeframe: .__timeframe
          relations:
            slo: .slo.id
  - kind: dashboard
    selector:
      query: "true"
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .title
          blueprint: '"datadogDashboard"'
          properties:
            url: .url
            description: .description
            is_read_only: .is_read_only
            created_at: .created_at
            modified_at: .modified_at
            author_handle: .author_handle
  - kind: dashboardMetric
    selector:
      query: "true"
    port:
      entity:
        mappings:
          blueprint: '"datadogDashboardMetric"'
          identifier: .id | tostring
          title: .definition | if (.title == "") then "Untitled Widget" else .title end
          properties:
            type: .definition.type
            queries: .definition.requests[0].queries
          relations:
            dashboard: .dashboard_id | tostring
