deleteDependentEntities: true
createMissingRelatedEntities: true
enableMergeEntity: true
resources:
  - kind: sloHistory
    selector:
      query: 'true'
      timeframe: 7
      periodOfTimeInMonths: 6
    port:
      entity:
        mappings:
          identifier: .slo.id | tostring
          title: .slo.name
          blueprint: '"datadogSloHistory"'
          properties:
            monitory_type: .type
            sampling_start_date: .from_ts | todate
            sampling_end_date: .to_ts | todate
            sliValue: .overall.sli_value
          relations:
            slo: .slo.id
  - kind: user
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .attributes.name
          blueprint: '"datadogUser"'
          properties:
            email: .attributes.email
            handle: .attributes.handle
            status: .attributes.status
            disabled: .attributes.disabled
            verified: .attributes.verified
            createdAt: .attributes.created_at | todate
  - kind: team
    selector:
      query: 'true'
      includeMembers: true
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .attributes.name
          blueprint: '"datadogTeam"'
          properties:
            description: .attributes.description
            handle: .attributes.handle
            userCount: .attributes.user_count
            summary: .attributes.summary
            createdAt: .attributes.created_at | todate
          relations:
            members: if .__members then .__members[].id else [] end
  - kind: host
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .aws_name // .host_name
          blueprint: '"datadogHost"'
          properties:
            up: .up
            host_name: .host_name
            platform: .meta.platform
            is_muted: .is_muted
            machine: .meta.machine
            description: .description
            sources: .sources
            cpu_cores: .meta.cpuCores
            agent_version: .meta.agent_version
            tags: .tags_by_source
  - kind: monitor
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .name
          blueprint: '"datadogMonitor"'
          properties:
            tags: .tags
            monitorType: .type
            overallState: .overall_state
            thresholds: .thresholds
            priority: .priority
            createdBy: .creator.email
            createdAt: .created
            updatedAt: .modified
  - kind: service
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .attributes.schema."dd-service"
          title: .attributes.schema."dd-service"
          blueprint: '"datadogService"'
          properties:
            application: .attributes.schema.application
            languages: .attributes.schema.languages
            description: .attributes.schema.description
            tags: .attributes.schema.tags
            type: .attributes.schema.type
            links: .attributes.schema.links | map(.url)
            owners: >-
              [.attributes.schema.contacts[] | select(.type == "email") |
              .contact]
          relations:
            team:
              combinator: '"and"'
              rules:
                - property: '"handle"'
                  operator: '"="'
                  value: .attributes.schema.team
  - kind: slo
    selector:
      query: 'true'
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .name
          blueprint: '"datadogSlo"'
          properties:
            tags: .tags
            sloType: .type
            description: .description
            warningThreshold: .warning_threshold
            targetThreshold: .target_threshold
            createdBy: .creator.email
            createdAt: .created_at | todate
            updatedAt: .modified_at | todate
          relations:
            monitors: .monitor_ids | map(tostring)
            services: >-
              .monitor_tags + .tags | map(select(startswith("service:"))) |
              unique | map(split(":")[1])
  - kind: host
    selector:
      query: >-
        [.sources[] | . as $source | ["azure", "gcp", "gce", "aws"] |
        contains([$source])] | any(.)
    port:
      entity:
        mappings:
          identifier: .id | tostring
          title: .aws_name // .host_name
          blueprint: '"datadogCloudResource"'
          properties:
            up: .up
            host_name: .host_name
            platform: .meta.platform
            is_muted: .is_muted
            machine: .meta.machine
            description: .description
            sources: .sources
            cpu_cores: .meta.cpuCores
            agent_version: .meta.agent_version
            tags: .tags_by_source
  - kind: serviceMetric
    selector:
      query: 'true'
      datadogSelector:
        metric: avg:system.mem.used
        env:
          tag: env
          value: '*'
        service:
          tag: servicename
          value: '*'
        timeframe: 10
    port:
      entity:
        mappings:
          blueprint: '"datadogServiceMetric"'
          identifier: .__query_id
          title: .query
          properties:
            query: .__query
            series: .series
            res_type: .res_type
            from_date: .from_date / 1000 | todate
            to_date: .to_date / 1000 | todate
            env: .__env
          relations:
            service: .__service
  - kind: serviceMetric
    selector:
      query: 'true'
      datadogSelector:
        metric: avg:system.disk.used
        env:
          tag: env
          value: prod
        service:
          tag: servicename
          value: '*'
        timeframe: 5
    port:
      entity:
        mappings:
          blueprint: '"datadogServiceMetric"'
          identifier: .__query_id
          title: .query
          properties:
            query: .__query
            series: .series
            res_type: .res_type
            from_date: .from_date / 1000 | todate
            to_date: .to_date / 1000 | todate
            env: .__env
          relations:
            service: .__service
